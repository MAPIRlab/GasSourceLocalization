<!-- mission file for GADEN player -->

<launch>  
    
    <arg name="scenario" default="ROOMS" />
    <arg name="simulation" default="1-6" />
    <arg name="source_location_x" default="1.75" />
    <arg name="source_location_y" default="8.60" />
    <arg name="source_location_z" default="0.50" />

     ### NODE environment (for RVIZ visualization) ###
    <node pkg="gaden_environment" type="environment" name="environment" output="screen">
        <param name="verbose" value="false"/>
        <param name="wait_preprocessing" value="false"/>    	  ### wait for the ok from gaden_preprocessing before running
        <param name="fixed_frame" value="map"/>

        # Plot CAD models (Collada format .dae)
        <param name="number_of_CAD" value="0"/>
        <rosparam subst_value="True">
            CAD_0: package://my_env/$(arg scenario)/cad_models/ROOMS-walls.dae
            CAD_0_color: [0.92, 0.96, 0.96]
                        
            CAD_1: package://my_env/$(arg scenario)/cad_models/ROOMS-outlets.dae
            CAD_1_color: [0.7, 0.7, 0.9]
        </rosparam>
	            
        # Plot 3D OccupancyGridmap
        <param name="occupancy3D_data" value="$(find my_env)/$(arg scenario)/OccupancyGrid3D.csv" />

        # Plot gas sources
        <param name="number_of_sources" value="1"/>
        <rosparam>
            source_0_position_x: 2.5
            source_0_position_y: -3.5
            source_0_position_z: 1.0
            source_0_scale: 0.2
            source_0_color: [0.0, 1.0, 0.0] 
        </rosparam>
    </node>
          

    ### NODE PLAYER ###
    #-------------------
    <node pkg="gaden_player" type="gaden_player" name="gaden_player" output="screen">
        <param name="verbose" value="false" />
	    <param name="player_freq" value="2" />         ###(Hz) Freq for loading the simulation log_files
	    <param name="initial_iteration" value="30" />
	    <param name="num_simulators" value="1" />      ### Number of simulations to load [1-inf] (useful for multiple sources and gases)
    
        # Data from the "filament_simulator" pkg. Multiple sources can be set here
        <param name="simulation_data_0" value="$(find my_env)/$(arg scenario)/gas_simulations/$(arg simulation)_patchy/FilamentSimulation_gasType_0_sourcePosition_$(arg source_location_x)_$(arg source_location_y)_$(arg source_location_z)_iteration_" />
        
        # Loop options        
        <param name="allow_looping" value="true" />
        <param name="loop_from_iteration" value="280" />
        <param name="loop_to_iteration" value="288" />
        
    </node>
   
        
   
   
    ### NODE Simulated Gas Sensor ###
    #--------------------------------
    # SENSOR MODELS: 
    # MOX: TGS2620=0, TGS2600=1, TGS2611=2
    # PID: MiniRaeLite=30
    <!--node pkg="tf" type="static_transform_publisher" name="mox0_broadcaster" args="3.0 3.0 0.4 0 0 0 map mox0_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="mox1_broadcaster" args="3.0 3.0 0.4 0 0 0 map mox1_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="mox2_broadcaster" args="3.0 3.0 0.4 0 0 0 map mox2_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="pid_broadcaster" args="3.0 3.0 0.4 0 0 0 map pid_frame 100" />

    <group ns="Mox00">
        <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="fake_mox" output="screen">
	        <param name="/sensor_model" value="0" />
	        <param name="/sensor_frame" value="mox0_frame" />
	        <param name="/fixed_frame" value="map"/>
        </node>        
    </group> 
    
    <group ns="Mox01">
        <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="fake_mox" output="screen">
	        <param name="/sensor_model" value="1" />
	        <param name="/sensor_frame" value="mox1_frame" />
	        <param name="/fixed_frame" value="map"/>	        
        </node>
    </group> 

    <group ns="Mox02">
        <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="fake_mox" output="screen">
	        <param name="/sensor_model" value="2" />
	        <param name="/sensor_frame" value="mox2_frame" />
	        <param name="/fixed_frame" value="map"/>	        
        </node>
    </group>
    

    <group ns="PID">
        <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="fake_pid" output="screen">
	        <param name="/sensor_model" value="30" />
	        <param name="/sensor_frame" value="pid_frame" />
	        <param name="/fixed_frame" value="map"/>	        
        </node>
    </group-->
    

    ### NODE Simulated Wind Sensor ###
    #---------------------------------

    <!--node pkg="tf" type="static_transform_publisher" name="anemometer_broadcaster" args="3.0 3.0 0.4 0 0 0 map anemometer_frame 100" />   
    <group ns="Anemometer01">
        <node pkg="simulated_anemometer" type="simulated_anemometer" name="fake_anemometer" output="screen">	        
	        <param name="/sensor_frame" value="anemometer_frame" />
	        <param name="/fixed_frame" value="map"/>
        </node>
    </group-->


    ### RQT PLOT Sensors ###
    #-----------------------
    <!--node pkg="rqt_plot" type="rqt_plot" name="rqt_plot1"  args="/Mox00/Sensor_reading/raw /Mox01/Sensor_reading/raw /Mox02/Sensor_reading/raw "/>
    <node pkg="rqt_plot" type="rqt_plot" name="rqt_plot2"  args="/PID/Sensor_reading/raw "/>
    <node pkg="rqt_plot" type="rqt_plot" name="rqt_plot3"  args="/Anemometer01/WindSensor_reading "/-->

  
     
  
    # MAP SERVER
    <node pkg="map_server" type="map_server" name="map_server" args="$(find my_env)/$(arg scenario)/occupancy.yaml" />
  
    ### RVIZ ###
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find my_env)/$(arg scenario)/launch/ros/gaden.rviz"/>
</launch>
