/**:
  ros__parameters:
    use_sim_time: True

$(var namespace):

  amcl:
    ros__parameters:
      alpha1: 0.2
      alpha2: 0.2
      alpha3: 0.2
      alpha4: 0.2
      alpha5: 0.2
      base_frame_id: "$(var namespace)_base_footprint"
      beam_skip_distance: 0.5
      beam_skip_error_threshold: 0.9
      beam_skip_threshold: 0.3
      do_beamskip: false
      global_frame_id: "map"
      lambda_short: 0.1
      laser_likelihood_max_dist: 2.0
      laser_max_range: 100.0
      laser_min_range: -1.0
      laser_model_type: "likelihood_field"
      max_beams: 60
      max_particles: 2000
      min_particles: 500
      odom_frame_id: "$(var namespace)_odom"
      pf_err: 0.05
      pf_z: 0.99
      recovery_alpha_fast: 0.0
      recovery_alpha_slow: 0.0
      resample_interval: 1
      robot_model_type: "nav2_amcl::DifferentialMotionModel"
      save_pose_rate: 0.5
      sigma_hit: 0.2
      tf_broadcast: true
      transform_tolerance: 1.0
      update_min_a: 0.2
      update_min_d: 0.25
      z_hit: 0.5
      z_max: 0.05
      z_rand: 0.5
      z_short: 0.05
      scan_topic: scan

  bt_navigator:
    ros__parameters:
      global_frame: map
      robot_base_frame: $(var namespace)_base_link
      odom_topic: /$(var namespace)/odom
      bt_loop_duration: 10
      default_server_timeout: 20
      navigators: ["navigate_to_pose"]
      default_nav_to_pose_bt_xml: $(find-pkg-share pmfs_env)/navigation_config/nav_to_pose_with_recovery.xml
      navigate_to_pose:
        plugin: "nav2_bt_navigator/NavigateToPoseNavigator"
      goal_blackboard_id: goal
      goals_blackboard_id: goals
      path_blackboard_id: path
      plugin_lib_names:
      - nav2_controller_cancel_bt_node
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      error_code_names:
        - compute_path_error_code
        - follow_path_error_code


  controller_server:
    ros__parameters:
      controller_frequency: 20.0
      min_x_velocity_threshold: 0.001
      min_y_velocity_threshold: 0.5
      min_theta_velocity_threshold: 0.005
      failure_tolerance: 0.3
      progress_checker_plugin: "progress_checker"
      goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
      controller_plugins: ["FollowPath"]
      action_server_result_timeout: 5.0

      # Progress checker parameters
      progress_checker:
        plugin: "nav2_controller::SimpleProgressChecker"
        required_movement_radius: 0.5
        movement_time_allowance: 10.0
      # Goal checker parameters
      general_goal_checker:
        stateful: True
        plugin: "nav2_controller::SimpleGoalChecker"
        xy_goal_tolerance: 0.25
        yaw_goal_tolerance: 1.0
      
      FollowPath:
      ######################################################################
        
        plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      # Pure Pursuit
        lookahead_dist: 0.6
        min_lookahead_dist: 0.3
        max_lookahead_dist: 0.9
        lookahead_time: 1.5
        rotate_to_heading_angular_vel: 1.0
        transform_tolerance: 0.1
        use_velocity_scaled_lookahead_dist: false
        min_approach_linear_velocity: 0.05
        approach_velocity_scaling_dist: 0.6
        use_collision_detection: true
        max_allowed_time_to_collision_up_to_carrot: 1.0
        use_regulated_linear_velocity_scaling: true
        use_fixed_curvature_lookahead: false
        curvature_lookahead_dist: 0.25
        use_cost_regulated_linear_velocity_scaling: false
        regulated_linear_scaling_min_radius: 0.9
        regulated_linear_scaling_min_speed: 0.25
        use_rotate_to_heading: true
        allow_reversing: false
        rotate_to_heading_min_angle: 0.785
        max_angular_accel: 3.2
        max_robot_pose_search_dist: 10.0

      ######################################################################
      #  plugin: "nav2_rotation_shim_controller::RotationShimController"
      #  primary_controller: "dwb_core::DWBLocalPlanner"
#
      ## RotationShim params
      #  angular_dist_threshold: 0.7
      #  forward_sampling_distance: 0.5
      #  rotate_to_heading_angular_vel: 1.5
      #  max_angular_accel: 3.2
      #  simulate_ahead_time: 1.0
#
      ##DWB
      #  min_vel_x: 0.0
      #  min_vel_y: 0.0
      #  max_vel_x: 0.26
      #  max_vel_y: 0.0
      #  max_vel_theta: 1.0
      #  min_speed_xy: 0.0
      #  max_speed_xy: 0.26
      #  min_speed_theta: 0.0
      #  acc_lim_x: 2.5
      #  acc_lim_y: 0.0
      #  acc_lim_theta: 3.2
      #  decel_lim_x: -2.5
      #  decel_lim_y: 0.0
      #  decel_lim_theta: -3.2
      #  vx_samples: 20
      #  vy_samples: 5
      #  vtheta_samples: 20
      #  sim_time: 1.7
      #  linear_granularity: 0.05
      #  angular_granularity: 0.025
      #  transform_tolerance: 0.2
      #  xy_goal_tolerance: 0.25
      #  trans_stopped_velocity: 0.25
      #  short_circuit_trajectory_evaluation: True
      #  stateful: True
      #  critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      #  BaseObstacle.scale: 0.02
      #  PathAlign.scale: 32.0
      #  GoalAlign.scale: 24.0
      #  PathAlign.forward_point_distance: 0.1
      #  GoalAlign.forward_point_distance: 0.1
      #  PathDist.scale: 32.0
      #  GoalDist.scale: 24.0
      #  RotateToGoal.scale: 32.0
      #  RotateToGoal.slowing_factor: 5.0
      #  RotateToGoal.lookahead_time: -1.0


  local_costmap:
    local_costmap:
      ros__parameters:
        update_frequency: 10.0
        publish_frequency: 5.0
        global_frame: "map"
        robot_base_frame: $(var namespace)_base_link
        rolling_window: true
        width: 3
        height: 3
        resolution: 0.05
        robot_radius: 0.05
        plugins: ["obstacle_layer", "inflation_layer"]
        obstacle_layer:
          plugin: "nav2_costmap_2d::ObstacleLayer"
          observation_sources: "scan"
          scan:
            topic: /$(var namespace)/laser_scan
            max_obstacle_height: 2.0
            clearing: True
            marking: True
            data_type: "LaserScan"
            raytrace_max_range: 3.0
            raytrace_min_range: 0.0
            obstacle_max_range: 2.5
            obstacle_min_range: 0.0
        inflation_layer:
          plugin: "nav2_costmap_2d::InflationLayer"
          cost_scaling_factor: 5.0
          inflation_radius: 2.5
         
        static_layer:
          plugin: "nav2_costmap_2d::StaticLayer"
          map_subscribe_transient_local: True
        always_send_full_costmap: True

  global_costmap:
    global_costmap:
      ros__parameters:
        update_frequency: 1.0
        publish_frequency: 1.0
        global_frame: map
        robot_base_frame: $(var namespace)_base_link
        robot_radius: 0.05
        resolution: 0.05
        track_unknown_space: true
        plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
        obstacle_layer:
          plugin: "nav2_costmap_2d::ObstacleLayer"
          enabled: True
          observation_sources: scan
          scan:
            topic: $(var namespace)/laser_scan
            max_obstacle_height: 2.0
            clearing: True
            marking: True
            data_type: "LaserScan"
            raytrace_max_range: 3.0
            raytrace_min_range: 0.0
            obstacle_max_range: 2.5
            obstacle_min_range: 0.0
        static_layer:
          plugin: "nav2_costmap_2d::StaticLayer"
          map_subscribe_transient_local: True
        inflation_layer:
          plugin: "nav2_costmap_2d::InflationLayer"
          cost_scaling_factor: 3.0
          inflation_radius: 0.55
        always_send_full_costmap: True


  planner_server:
    ros__parameters:
      expected_planner_frequency: 20.0
      planner_plugins: ["GridBased"]
      GridBased:
        plugin: "nav2_navfn_planner/NavfnPlanner"
        tolerance: 0.2
        use_astar: true
        allow_unknown: false

  smoother_server:
    ros__parameters:
      smoother_plugins: ["simple_smoother"]
      simple_smoother:
        plugin: "nav2_smoother::SimpleSmoother"
        tolerance: 1.0e-10
        max_its: 1000
        do_refinement: True

  behavior_server:
    ros__parameters:
      local_costmap_topic: $(var namespace)/local_costmap/costmap_raw
      global_costmap_topic: $(var namespace)/global_costmap/costmap_raw
      local_footprint_topic: $(var namespace)/local_costmap/published_footprint
      global_footprint_topic: $(var namespace)/global_costmap/published_footprint
      cycle_frequency: 10.0
      behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
      spin:
        plugin: "nav2_behaviors/Spin"
      backup:
        plugin: "nav2_behaviors/BackUp"
      drive_on_heading:
        plugin: "nav2_behaviors/DriveOnHeading"
      wait:
        plugin: "nav2_behaviors/Wait"
      assisted_teleop:
        plugin: "nav2_behaviors/AssistedTeleop"
      local_frame: $(var namespace)_odom
      global_frame: map
      robot_base_frame: $(var namespace)_base_link
      transform_tolerance: 0.1
      simulate_ahead_time: 2.0
      max_rotational_vel: 1.0
      min_rotational_vel: 0.4
      rotational_acc_lim: 3.2

  velocity_smoother:
    ros__parameters:
      smoothing_frequency: 20.0
      scale_velocities: False
      feedback: "OPEN_LOOP"
      max_velocity: [0.26, 0.0, 1.0]
      min_velocity: [-0.26, 0.0, -1.0]
      max_accel: [2.5, 0.0, 3.2]
      max_decel: [-2.5, 0.0, -3.2]
      odom_topic: "/$(var namespace)/odom"
      odom_duration: 0.1
      deadband_velocity: [0.0, 0.0, 0.0]
      velocity_timeout: 1.0